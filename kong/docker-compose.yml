version: '3.8'

services:
  kong-database:
    image: postgres:13
    container_name: database-kong
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - app-database-kong:/var/lib/postgresql/data      
    ports:
      - "5432:5432"
    networks:
      app-network:
        aliases:
          - kong-database      

  kong-migration:
    image: kong:latest
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
    command: kong migrations bootstrap
    networks:
      - app-network    

  kong:
    image: kong:latest
    depends_on:
      - kong-database
      - kong-migration
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001"]
      interval: 10s
      timeout: 5s
      retries: 5

  konga:
    image: pantsel/konga:latest
    depends_on:
      - kong
    environment:
      NODE_ENV: production
      KONGA_HOOK_TIMEOUT: 120000
      KONGA_DB_ADAPTER: postgres
      KONGA_DB_HOST: kong-database
      KONGA_DB_USER: kong
      KONGA_DB_PASSWORD: kong
      KONGA_DB_DATABASE: kong
    ports:
      - "1337:1337"
    networks:
      - app-network

# Volumes
volumes:
  app-database-kong:
    external: true

# Docker Networks
networks:
  app-network:
    name: app-network
    driver: bridge
    external: true
