version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - 5433:5432      
    volumes:
      - postgres_data_airflow:/var/lib/postgresql/data
    networks:
      - app-network

  webserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: apache/airflow:2.10.1-python3.11  # Especifica la versión de Python aquí
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: 'GkRnVIdmuf5QEA4XBWbyeUB7P0vFEzDEm7llz-ul2R8='
      AIRFLOW__WEBSERVER__SECRET_KEY: 'GkRnVIdmuf5QEA4XBWbyeUB7P0vFEzDEm7llz-ul2R8='
      AIRFLOW__WEBSERVER__AUTH_BACKEND: 'airflow.contrib.auth.backends.password_auth'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__ALLOW_TEST_CONNECTION: 'True'  # Habilitar pruebas de conexión
      AIRFLOW__WEBSERVER__ALLOW_TESTING_CONNECTIONS: 'True'
      AIRFLOW__CORE__TEST_CONNECTION: 'True'
      _AIRFLOW_WWW_USER_USERNAME: 'admin'
      _AIRFLOW_WWW_USER_PASSWORD: 'admin'
      LANG: 'C.UTF-8'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username admin --password admin --firstname Zayro --lastname Arias --role Admin --email admin@example.com &&
      airflow webserver
      "
    networks:
      - app-network

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    image: apache/airflow:2.10.1-python3.11  
    depends_on:
      - webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: 'GkRnVIdmuf5QEA4XBWbyeUB7P0vFEzDEm7llz-ul2R8='
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: >
      bash -c "
      airflow db init &&
      airflow scheduler
      "
    networks:
      - app-network

volumes:
  postgres_data_airflow:
    external: true

networks:
  app-network:
    name: app-network
    driver: bridge
    external: true
